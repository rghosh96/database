import React, { Component } from 'react'
import Form from 'react-bootstrap/Form';
import Button from 'react-bootstrap/Button';
import Alert from 'react-bootstrap/Alert';
import Col from 'react-bootstrap/Col';
import { Redirect } from 'react-router-dom';
import { connect } from 'react-redux';
import { signUp } from './../../reduxStore/actions/authActions'

class SignUpPage extends Component {
    state = {
        email: '',
        password: '',
        fName: '',
        lName: '',
        major: '',
        state: '',
        classification: ''
    }

    handleChange = (e) => {
        this.setState( {
            [e.target.id]: e.target.value,

        })
    }

    emptyError = () => {
        return (
            alert("sorry, one or more of the values is empty!")
        )
    }

    handleSubmit = (e) => {
        e.preventDefault();
        console.log(this.state);
        this.props.signUp(this.state);
        
    }

    render() {
        const { auth,authError } = this.props;
        if (auth.uid) return <Redirect to ='/'/>
        return (
            <div className="authPages">
            <h2>sign up</h2>
            
            <div className="form">
                <Form onSubmit={this.handleSubmit}>
                <Form.Row>
                <Col>
                    <Form.Label>first name</Form.Label>
                    <Form.Control onChange={this.handleChange} id="fName" />
                    </Col>
                    <Col>
                    <Form.Label>last name</Form.Label>
                    <Form.Control onChange={this.handleChange} id="lName"  />
                    </Col>
                </Form.Row>

                
                <Form.Group  controlId="formGridEmail">
                    <Form.Label>Email</Form.Label>
                    <Form.Control onChange={this.handleChange} id="email" type="email"  />
                </Form.Group>

                <Form.Group controlId="formGridPassword">
                    <Form.Label>Password</Form.Label>
                    <Form.Control onChange={this.handleChange} id="password" type="password"/>
                </Form.Group>

                <Form.Row>

                    <Form.Group as={Col} controlId="formGridState">
                    <Form.Label>State</Form.Label>
                    <Form.Control onChange={this.handleChange} id="state"/>
                    </Form.Group>
                    
                    <Form.Group as={Col} >
                    <Form.Label>Major</Form.Label>
                    <Form.Control onChange={this.handleChange} id="major" />
                    </Form.Group>


                    <Form.Group as={Col}>
                    <Form.Label>Classification</Form.Label>
                    <Form.Control onChange={this.handleChange} id="classification" as="select" >
                        <option>please select</option>
                        <option>undergraduate</option>
                        <option>graduate</option>
                    </Form.Control>
                    </Form.Group>

                </Form.Row>
                <p>a username will be autogenerated for u based on your email handle</p>
                <Button variant="primary" type="submit">
                    Submit
                </Button>
                
                {authError ? 
                    <Alert variant="primary">
                        <p className="alertText">
                        { authError }
                        </p>
                    </Alert> : null}
                </Form>
            </div>
            </div>
        )
    }
}

const mapStateToProps = (state) => {
    return {
        auth: state.firebase.auth,
        authError: state.auth.authError
    }
}

const mapDispatchToProps = (dispatch) => {
    return {
        signUp: (newUser) => dispatch(signUp(newUser))
    }
}

export default connect(mapStateToProps, mapDispatchToProps)(SignUpPage)

{"version":3,"sources":["components/layout/SignedInLinks.js","reduxStore/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navigation.js","reduxStore/actions/kitActions.js","components/kits/KitInfo.js","components/kits/KitCard.js","components/kits/SearchUserKit.js","components/kits/AllKit.js","components/kits/SearchTypeKit.js","components/dashboard/Queries.js","components/auth/SignInPage.js","components/auth/SignUpPage.js","components/kits/AddKit.js","components/users/UserProfile.js","components/users/UserKits.js","components/users/AllUsers.js","App.js","serviceWorker.js","reduxStore/reducer/authReducer.js","reduxStore/reducer/kitReducer.js","reduxStore/reducer/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","console","log","Nav","className","Link","href","onClick","Button","profile","initials","SignedOutLinks","state","firebase","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","id","uid","updateLike","kit","value","getFirestore","collection","doc","set","likes","catch","err","likeKit","user","like","Modal","size","aria-labelledby","centered","Header","closeButton","Title","name","Body","Badge","pill","variant","description","Footer","moment","created","toDate","calendar","deleteKit","delete","error","React","useState","modalShow","setModalShow","Card","class","userId","Text","show","onHide","SearchUserKit","search","CardColumns","map","alike","i","key","AllKit","kits","SearchTypeKit","Queries","selection","handleChange","e","setState","target","this","Form","Control","onChange","as","placeholder","Component","compose","firestore","ordered","users","firestoreConnect","subcollections","storeAs","SignInPage","email","password","handleSubmit","preventDefault","signIn","authError","to","onSubmit","Group","controlId","Label","Alert","creds","signInWithEmailAndPassword","SignUpPage","fName","lName","major","classification","emptyError","alert","signUp","Row","Col","newUser","createUserWithEmailAndPassword","resp","username","split","AddKit","addKit","history","push","aria-label","firestoreDB","profileInfo","add","Date","userKit","likedKit","location","count","akit","pathname","App","exact","path","component","UserProfile","AllUsers","UserKits","Boolean","window","hostname","match","initState","authReducer","action","message","kitReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","useFirestoreForProfile","userProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","Spinner","animation","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ec8b8ba.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './../../_main.scss';\nimport Button from 'react-bootstrap/Button';\nimport Nav from 'react-bootstrap/Nav';\nimport { connect } from 'react-redux';\nimport { signOut } from './../../reduxStore/actions/authActions'\n\nconst SignedInLinks = (props) => {\n    console.log(props)\n    return (\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/users\">contributors</Nav.Link>\n            <Nav.Link href=\"/addkit\">add kit</Nav.Link>\n            <Nav.Link onClick={props.signOut}>sign out</Nav.Link>\n            <Button href=\"/profile\" className='btn-circle'>{props.profile.initials}</Button>  \n        </Nav>\n    );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks);","export const signIn = (creds) => {\n    return (dispatch, getState, {getFirebase}) => {\n        // get firebase instance\n        const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword (\n            creds.email,\n            creds.password\n        ).then(() => {\n            dispatch({ type: 'SIGNIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'SIGNIN_ERROR'})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        // get firebase instance\n        const firebase = getFirebase();\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    // firebase for auth, firestore to store user data in users collections\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n        // create user\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            // create new document for this user in users collection\n            return firestore.collection('users').doc(resp.user.uid).set({\n                email: newUser.email,\n                fName: newUser.fName,\n                lName: newUser.lName,\n                major: newUser.major,\n                state: newUser.state,\n                classification: newUser.classification,\n                initials: newUser.fName[0] + newUser.lName[0],\n                username: newUser.email.split('@')[0] })\n            }).then(() => {\n                dispatch({ type: 'SIGNUP_SUCCESS'})\n            }).catch(err => {\n                dispatch({ type: 'SIGNUP_ERROR', err})\n            })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './../../_main.scss';\nimport Nav from 'react-bootstrap/Nav';\n\nconst SignedOutLinks = () => {\n    return (\n        <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/users\">contributors</Nav.Link>\n            <Nav.Link href=\"/signin\">sign in</Nav.Link>\n            <Nav.Link href=\"/signup\">sign up</Nav.Link>\n        </Nav>\n    );\n}\n\nexport default SignedOutLinks;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './../../_main.scss';\nimport Navbar from 'react-bootstrap/Navbar';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux';\n\n\nconst Navigation = (props) => {\n    const { auth, profile } = props;\n    return (\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"/\">quarantine corner</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                    {auth.uid ? <SignedInLinks profile = {profile} /> : <SignedOutLinks/>}\n            </Navbar.Collapse>\n            </Navbar>\n            \n    );\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return{\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navigation);","export const addKit = (kit) => {\n    // dispatch dispatches action to reducer\n    // returns to function and halts dispatch\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // make asynch db call\n        // reference to firestore db\n        console.log(kit);\n        const firestoreDB = getFirestore();\n        // gets profile data from firebase\n        const profileInfo = getState().firebase.profile\n        // gets userId to associate with user collection when kit is added\n        const userId = getState().firebase.auth.uid\n        firestoreDB.collection('kit').add({\n            name: kit.name,\n            type: kit.type,\n            description: kit.description,\n            user: profileInfo.username,\n            likes: 0,\n            userId: userId,\n            created: new Date()\n        }).then(() => {\n            // returns promise when finished, & can\n            // then continue with dispatch\n            dispatch({\n                type: 'ADD_KIT',\n                kit: kit\n            })\n        }).catch((err) => {\n            dispatch({ \n                type: 'ADD_KIT_ERROR'.\n                err\n            });\n        })\n        \n    }\n}\n\nexport const updateLike = (kit, value) => {\n    // dispatch dispatches action to reducer\n    // returns to function and halts dispatch\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // make asynch db call\n        // reference to firestore db\n        console.log(kit);\n        const firestoreDB = getFirestore();\n        firestoreDB.collection('kit').doc(kit.id).set({\n            ...kit,\n            likes: kit.likes + value\n        }).then(() => {\n            // returns promise when finished, & can\n            // then continue with dispatch\n            dispatch({\n                type: 'UPDATE_LIKE',\n                kit: kit\n            })\n        }).catch((err) => {\n            dispatch({ \n                type: 'UDPDATE_LIKE_ERROR',\n                err\n            });\n        })\n        \n    }\n}\n\nexport const likeKit = (user, kit, like) => {\n    // dispatch dispatches action to reducer\n    // returns to function and halts dispatch\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // make asynch db call\n        // reference to firestore db\n        const firestoreDB = getFirestore();\n        firestoreDB.collection('users').doc(user.uid).collection('likes').doc(kit.id).set({\n            like: like\n        }).then(() => {\n            // returns promise when finished, & can\n            // then continue with dispatch\n            dispatch({\n                type: 'LIKE_KIT_SUCCESS',\n                kit: kit\n            })\n        }).catch((err) => {\n            dispatch({ \n                type: 'LIKE_KIT_ERROR',\n                err\n            });\n        })\n        \n    }\n}\n\nexport const deleteKit = (kit) => {\n    // dispatch dispatches action to reducer; returns function and halts that dispatch\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        // make asynch call to firestore db, then carry on w dispatch\n        const firestore = getFirestore();\n        firestore.collection('kit').doc(kit.id).delete().then(() => {\n            dispatch({\n                type: 'DELETE_KIT_SUCCESS',\n            });\n        }).catch((error) => {\n            dispatch({\n                type: 'DELETE_KIT_ERROR',\n                error\n            })\n        })\n        \n    }\n}","import React from 'react'\nimport Modal from 'react-bootstrap/Modal';\nimport Badge from 'react-bootstrap/Badge';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { updateLike,likeKit, addLike } from './../../reduxStore/actions/kitActions'\n\nfunction KitInfo(props) {\n        // const id= props.match.params.id;\n        // console.log(id);\n        const checkLike = () => {\n          if (props.like) {\n              if (props.like.like === true) {\n                  return 'activeLike'\n              }\n              else {\n                  return 'like'\n              }\n          }\n          else {\n              return 'like'\n          }\n      }\n        const likeButton = () => {\n          console.log(props.like)\n          if (props.like) {\n              if (props.like.like === true) {\n                  props.likeKit(props.auth, props.kit, false)\n                  props.updateLike(props.kit, -1)\n              }\n              else {\n                  props.likeKit(props.auth, props.kit, true)\n                  props.updateLike(props.kit, 1)\n              }\n          }\n          else {\n              props.likeKit(props.auth, props.kit, true)\n              props.updateLike(props.kit, 1)\n          }\n      }\n        return (\n            <Modal\n              {...props}\n              size=\"lg\"\n              aria-labelledby=\"contained-modal-title-vcenter\"\n              centered\n            >\n              <Modal.Header closeButton>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {props.kit.name}\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"modalInfo\">\n                  <p className=\"kitNameModal\">{props.kit.name}   </p>\n                  <Badge pill variant=\"primary\">\n                      {props.kit.type}\n                  </Badge>\n                </div>\n                <p>{props.kit.description}</p>\n              </Modal.Body>\n              <Modal.Footer>\n                <small className=\"text-muted\">{moment(props.kit.created.toDate()).calendar()} by {props.kit.user} &nbsp; | &nbsp; <p className ={props.auth.uid ?checkLike(): 'disabled'} onClick={props.auth.uid ? likeButton: null}>{props.kit.likes} ♥</p></small>\n              </Modal.Footer>\n            </Modal>\n          );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    updateLike: (kit, value) => dispatch(updateLike(kit, value)),\n    likeKit: (user, kit, like) => dispatch(likeKit(user, kit, like)),\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n      auth: state.firebase.auth\n  }\n}\n\nexport default\n  connect(mapStateToProps, mapDispatchToProps)(KitInfo);\n\n","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Badge from 'react-bootstrap/Badge';\nimport Button from 'react-bootstrap/Button';\nimport KitInfo from './KitInfo';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { updateLike,likeKit, deleteKit } from './../../reduxStore/actions/kitActions'\n\nconst KitCard = (props) => {\n    console.log(props)\n    const [modalShow, setModalShow] = React.useState(false);\n    const checkLike = () => {\n        if (props.like) {\n            if (props.like.like === true) {\n                return 'activeLike'\n            }\n            else {\n                return 'like'\n            }\n        }\n        else {\n            return 'like'\n        }\n    }\n\n    const deleteThis = () => {\n        props.deleteKit(props.kit)\n    }\n\n    const likeButton = () => {\n        console.log(props.like)\n        if (props.like) {\n            if (props.like.like === true) {\n                props.likeKit(props.auth, props.kit, false)\n                props.updateLike(props.kit, -1)\n            }\n            else {\n                props.likeKit(props.auth, props.kit, true)\n                props.updateLike(props.kit, 1)\n            }\n        }\n        else {\n            props.likeKit(props.auth, props.kit, true)\n            props.updateLike(props.kit, 1)\n        }\n    }\n\n    \n\n    return (\n        <Card>\n            <Card.Body> <div class=\"kitcards\">\n            <Card.Title onClick={() => setModalShow(true)} >{props.kit.name} </Card.Title> \n            {props.auth.uid === props.kit.userId? <p onClick={() => {deleteThis()} } className=\"delete\" >delete</p> : null}\n            </div>\n            <Card.Text className=\"kitcards\">\n                <p className=\"kitName\">{props.kit.name} </p> \n                <Badge pill variant=\"primary\">\n                    {props.kit.type}\n                </Badge>\n            </Card.Text>\n            </Card.Body>\n            <Card.Footer>\n            <small className=\"text-muted\">{moment(props.kit.created.toDate()).calendar()} by {props.kit.user} <p className ={props.auth.uid ?checkLike(): 'disabled'} onClick={props.auth.uid ? likeButton: null}>{props.kit.likes} ♥</p></small>\n            </Card.Footer>\n                <KitInfo kit={props.kit} like={props.like}\n                    show={modalShow}\n                    onHide={() => setModalShow(false)}\n                />\n                \n        </Card>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateLike: (kit, value) => dispatch(updateLike(kit, value)),\n        likeKit: (user, kit, like) => dispatch(likeKit(user, kit, like)),\n        deleteKit: (kit) => dispatch(deleteKit(kit))\n    }\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default\n    connect(mapStateToProps, mapDispatchToProps)(KitCard);\n\n","import React from 'react';\nimport KitCard from './KitCard';\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nconst SearchUserKit = ({kit, likes, search}) => {\n    console.log(kit);\n    console.log(likes);\n    console.log(search);\n\n    return (\n            <CardColumns>\n                { kit && kit.map(kit => {\n                console.log(kit.id)\n                var alike\n                if(likes) {\n                    console.log(likes)\n                for (var i in likes) {\n                    console.log(likes[i].id)\n                    if (likes[i].id === kit.id) {\n                        console.log(likes[i].id)\n                        alike = likes[i]}\n                }}\n                if (kit.user === search) {\n                    return (\n                        <KitCard kit={kit} like={alike}  key={kit.id} />\n                    )}\n                })}\n            </CardColumns>\n    \n    )\n}\n\nexport default SearchUserKit;\n\n","import React from 'react';\nimport KitCard from './KitCard';\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nconst AllKit = (props) => {\n    console.log(props);\n    return (\n            <CardColumns>\n                { props.kits.kit && props.kits.kit.map(kit => {\n                console.log(kit.id)\n                var like\n                if(props.kits.likes) {\n                    console.log(props.kits.likes)\n                for (var i in props.kits.likes) {\n                    console.log(props.kits.likes[i].id)\n                    if (props.kits.likes[i].id === kit.id) {\n                        console.log(props.kits.likes[i].id)\n                        like = props.kits.likes[i]}\n                }}\n                    return (\n                        <KitCard kit={kit} like={like} key={kit.id} />\n                    )\n                })}\n            </CardColumns>\n    \n    )\n}\n\nexport default AllKit;\n\n","import React from 'react';\nimport KitCard from './KitCard';\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nconst SearchTypeKit = ({kit, likes, search}) => {\n\n    console.log(search);\n\n    return (\n            <CardColumns>\n               { kit && kit.map(kit => {\n                console.log(kit.id)\n                var alike\n                if(likes) {\n                    console.log(likes)\n                for (var i in likes) {\n                    console.log(likes[i].id)\n                    if (likes[i].id === kit.id) {\n                        console.log(likes[i].id)\n                        alike = likes[i]}\n                }}\n                if (kit.type === search) {\n                    return (\n                        <KitCard kit={kit} like={alike}  key={kit.id} />\n                    )}\n                })} \n            </CardColumns>\n    \n    )\n}\n\n\n\nexport default SearchTypeKit;\n\n","import React, { Component } from 'react';\nimport SearchUserKit from '../kits/SearchUserKit';\nimport AllKit from '../kits/AllKit';\nimport SearchTypeKit from '../kits/SearchTypeKit';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport Form from 'react-bootstrap/Form';\n\nclass Queries extends Component {\n    state = {\n        selection: 'query1',\n        user: '',\n        type: ''\n    }\n\n    handleChange = (e) => {\n        this.setState( {\n            [e.target.id]: e.target.value,\n\n        })\n        console.log(this.state);\n    }\n    render() {\n        console.log(this.props);\n        return (\n            <div>\n                \n                <div className=\"queryArea\">\n                    <h1 className=\"title\">quarantine corner</h1><br/>\n                    <p>welcome to quarantine corner! here, you can view \"kits,\" which are simple suggestions for things\n                        to do during quarantine (such as a videogame, a workout, a food recipe, etc!). if you are a user, you can add your own kits, and like other people's to add them to your collection! \n                        pls select which quarantine kits to view, & then click kit barcode to view more information about that kit!</p>\n                    <hr />\n                    <div className=\"queries\">\n                    <div className=\"directions\">\n                    <Form.Control onChange={this.handleChange} id=\"selection\" as=\"select\" >\n                        <option value=\"query0\">select an option...</option>\n                        <option value=\"query1\">view all kits</option>\n                        <option value=\"query2\" >view kits by user</option>\n                        <option value=\"query3\">view kits by type</option>\n                    </Form.Control> \n                    </div>\n                    <br></br>\n                    <hr></hr>\n\n                    {/* view all kits */}\n                    {this.state.selection == 'query1' ? \n                    <div>\n                        <br></br>\n                        <p className=\"directions\">here are all the current quarantine kits: </p>\n                        <AllKit kits = {this.props}/>\n                    </div>\n                    : null\n                    }\n\n                    {/* search by username */}\n                    {this.state.selection == 'query2' ? \n                    <div >\n                        <br></br>\n                        <p className=\"directions\">type in the username. if no kits are displayed, the username is \n                            either not recognized or that user does not added any kits yet!\n                        </p>\n                        <div className=\"directions\">\n                        <Form.Control onChange={this.handleChange} id=\"user\" placeholder=\"enter username\" />  </div>\n                        {this.state.user ? <SearchUserKit kit = {this.props.kit} likes = {this.props.likes} search = {this.state.user}/> : null}\n                    </div>\n                    : null\n                    }\n\n                    {/* search by type */}\n                    {this.state.selection == 'query3' ? \n                    <div>\n                        <br></br>\n                        <p className=\"directions\">pls select a type: </p>\n                        <div className=\"directions\">\n                        <Form.Control onChange={this.handleChange} id=\"type\" as=\"select\" >\n                            <option>select ..</option>\n                            <option value=\"food/drinks\">food/drinks</option>\n                            <option value=\"games\" >games</option>\n                            <option value=\"movies/tv\">movies/tv</option>\n                            <option value=\"music\">music</option>\n                            <option value=\"health/exercise\">health/exercise</option>\n                            <option value=\"arts/diy\">arts/diy</option>\n                            <option value=\"misc\">misc</option>\n                        </Form.Control> </div>\n                        {this.state.type ? <SearchTypeKit kit = {this.props.kit} likes = {this.props.likes} search = {this.state.type}/> : null}\n                    </div>\n                    : null\n                    }\n                    \n                </div>\n                </div>\n            </div>\n\n        )\n    }\n}\n\n// map state from store to props, takes in state of store\n// queries will grab data from the store & then pass it to all its children components\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        // get kit object from rootReducer, to kits array\n        kit: state.firestore.ordered.kit,\n        likes: state.firestore.ordered.likes,\n        users: state.firestore.ordered.users,\n        auth: state.firebase.auth\n    }\n}\n\nexport default  compose(\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        if (props.auth.uid) {\n        return [ \n        {collection: 'kit'},\n        {collection: 'users'},\n        {collection: 'users',\n        doc: props.auth.uid,\n        subcollections: [\n            {collection: 'likes'}\n        ], storeAs: 'likes'}\n    ]}\n    else {\n        return[{collection: 'kit'},\n        {collection: 'users'}]\n    }})\n)(Queries);\n\n","import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport { connect } from 'react-redux';\nimport { signIn } from './../../reduxStore/actions/authActions'\nimport { Redirect } from 'react-router-dom';\n\nclass SignInPage extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState( {\n            [e.target.id]: e.target.value,\n\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signIn(this.state);\n    }\n\n    render() {\n        const { authError, auth } = this.props;\n        if (auth.uid) return <Redirect to ='/'/>\n        return (\n            <div className=\"authPages\">\n            <h2>sign in</h2>\n            <div className=\"form\">\n                <Form onSubmit={this.handleSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control onChange={this.handleChange} id=\"email\" type=\"email\" placeholder=\"Enter email\" />\n                        <Form.Text className=\"text-muted\">\n                        We'll never share your email with anyone else.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control onChange={this.handleChange} id=\"password\" type=\"password\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Submit\n                    </Button>\n                    {authError ? \n                    <Alert variant=\"primary\">\n                        <p className=\"alertText\">\n                        sorry!!! that email/password combo was not recognized! ):\n                        </p>\n                    </Alert> : null}\n                    </Form>\n                    \n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignInPage)\n","import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Alert from 'react-bootstrap/Alert';\nimport Col from 'react-bootstrap/Col';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from './../../reduxStore/actions/authActions'\n\nclass SignUpPage extends Component {\n    state = {\n        email: '',\n        password: '',\n        fName: '',\n        lName: '',\n        major: '',\n        state: '',\n        classification: ''\n    }\n\n    handleChange = (e) => {\n        this.setState( {\n            [e.target.id]: e.target.value,\n\n        })\n    }\n\n    emptyError = () => {\n        return (\n            alert(\"sorry, one or more of the values is empty!\")\n        )\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(this.state);\n        this.props.signUp(this.state);\n        \n    }\n\n    render() {\n        const { auth,authError } = this.props;\n        if (auth.uid) return <Redirect to ='/'/>\n        return (\n            <div className=\"authPages\">\n            <h2>sign up</h2>\n            \n            <div className=\"form\">\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                <Col>\n                    <Form.Label>first name</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"fName\" />\n                    </Col>\n                    <Col>\n                    <Form.Label>last name</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"lName\"  />\n                    </Col>\n                </Form.Row>\n\n                \n                <Form.Group  controlId=\"formGridEmail\">\n                    <Form.Label>Email</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"email\" type=\"email\"  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formGridPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"password\" type=\"password\"/>\n                </Form.Group>\n\n                <Form.Row>\n\n                    <Form.Group as={Col} controlId=\"formGridState\">\n                    <Form.Label>State</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"state\"/>\n                    </Form.Group>\n                    \n                    <Form.Group as={Col} >\n                    <Form.Label>Major</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"major\" />\n                    </Form.Group>\n\n\n                    <Form.Group as={Col}>\n                    <Form.Label>Classification</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"classification\" as=\"select\" >\n                        <option>please select</option>\n                        <option>undergraduate</option>\n                        <option>graduate</option>\n                    </Form.Control>\n                    </Form.Group>\n\n                </Form.Row>\n                <p>a username will be autogenerated for u based on your email handle</p>\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                \n                {authError ? \n                    <Alert variant=\"primary\">\n                        <p className=\"alertText\">\n                        { authError }\n                        </p>\n                    </Alert> : null}\n                </Form>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUpPage)\n","import React, { Component } from 'react'\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux'\nimport { addKit } from './../../reduxStore/actions/kitActions'\nimport { Redirect } from 'react-router-dom';\nclass AddKit extends Component {\n    state = {\n        name: '',\n        type: '',\n        description: ''\n    }\n\n    handleChange = (e) => {\n        this.setState( {\n            [e.target.id]: e.target.value,\n\n        })\n    }\n\n    handleSubmit = (e) => {\n\n        e.preventDefault();\n        console.log(this.state);\n        // pass in state to addKit which is handled by dispatcher\n        this.props.addKit(this.state);\n        // redirects user to home page\n        this.props.history.push('/');\n        \n    }\n\n    render() {\n        const { auth } = this.props;\n        // redirect if not signed in!\n        if (!auth.uid) return <Redirect to ='/signin'/>\n        console.log(this.props);\n        console.log(this.state);\n\n        return (\n            <div className=\"authPages\">\n            <h2>add a kit</h2>\n            <div className=\"form\">\n                <Form onSubmit={this.handleSubmit}>\n                <Form.Row>\n                <Col>\n                    <Form.Label>name</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"name\" placeholder=\"kit name\" />\n                    </Col>\n                    <Form.Group as={Col}>\n                    <Form.Label>type</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"type\" as=\"select\" >\n                        <option>select ..</option>\n                        <option >food/drinks</option>\n                        <option >games</option>\n                        <option >movies/tv</option>\n                        <option >music</option>\n                        <option >health/exercise</option>\n                        <option >arts/diy</option>\n                        <option >misc</option>\n                    </Form.Control>\n                    </Form.Group>\n                </Form.Row>\n\n                    <Form.Label>description</Form.Label>\n                    <Form.Control onChange={this.handleChange} id=\"description\" as=\"textarea\" aria-label=\"With textarea\" />\n                <br />\n                <Button variant=\"primary\" type=\"submit\">\n                    Submit\n                </Button>\n                </Form>\n            </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        addKit: (kit) => dispatch(addKit(kit))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddKit);\n","import React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport KitCard from '../kits/KitCard';\nimport CardColumns from 'react-bootstrap/CardColumns'\n\nconst UserProfile = ({profile, auth, likes, kit}) => {\n    if (!auth.uid) return <Redirect to ='/'/>\n    console.log(kit)\n    console.log(likes)\n    return (\n        <div className = \"authPages\">\n            <h1> User Profile. </h1>\n            <div className=\"profile\">\n            <div className=\"profileInfo\">\n                <Row>\n                    <Col className=\"fixed\"><h3>name </h3> </Col>\n                    <Col ><p> {profile.fName} {profile.lName} </p></Col>\n                </Row> \n                <Row >\n                    <Col className=\"fixed\"><h3>username </h3> </Col>\n                    <Col ><p> {profile.username} </p></Col>\n                </Row>\n                <Row>\n                    <Col className=\"fixed\"><h3>email </h3> </Col>\n                    <Col ><p> {profile.email}  </p></Col>\n                </Row> \n                <Row >\n                    <Col className=\"fixed\"><h3>major </h3> </Col>\n                    <Col ><p> {profile.major} </p></Col>\n                </Row>\n                <Row >\n                    <Col className=\"fixed\"><h3>state </h3> </Col>\n                    <Col ><p> {profile.state} </p></Col>\n                </Row>\n                <Row >\n                    <Col className=\"fixed\"><h3>u/grad </h3> </Col>\n                    <Col ><p> {profile.classification} </p></Col>\n                </Row>\n            </div>\n            </div>\n            <hr></hr>\n            <br/>\n            <h1> Your Kits. </h1>\n            <CardColumns>\n                {\n                    kit && kit.map(userKit => {\n                        var like\n                        if(likes) {\n                        for (var i in likes) {\n                            if (likes[i].id === userKit.id) {\n                                like = likes[i]}\n                        }\n                        if (userKit.userId === auth.uid) {\n                                return (\n                                <KitCard kit={userKit} like={like} key={userKit.id} /> )\n                        }\n                    \n                    }})\n             }\n                    \n            </CardColumns>\n            <hr></hr>\n            <br/>\n            <h1> Your Liked Kits. </h1>\n            <CardColumns>\n                {\n                    kit && kit.map(likedKit => {\n                        for (var i in likes) {\n                            if (likedKit.id === likes[i].id && likes[i].like === true) {\n                                return (\n                                <KitCard kit={likedKit} like={likes[i]} key={likedKit.id} /> )\n                        }\n                    \n                    }})\n             }\n                    \n            </CardColumns>\n            \n        </div>\n    )\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return{\n        profile: state.firebase.profile,\n        auth: state.firebase.auth,\n        likes: state.firestore.ordered.likes,\n        kit: state.firestore.ordered.kit\n    }\n}\n\nexport default  compose(\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        if (props.auth.uid) {\n        return [ \n        {collection: 'kit'},\n        {collection: 'users',\n        doc: props.auth.uid,\n        subcollections: [\n            {collection: 'likes'}\n        ], storeAs: 'likes'}\n    ]}})\n)(UserProfile);\n\n\n","import React from 'react';\nimport KitCard from '../kits/KitCard';\nimport CardColumns from 'react-bootstrap/CardColumns'\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\n\nconst UserKits = (props) => {\n    console.log(props.location.state.id)\n    if (props.location.state.count === 0) {\n        return (\n            <div className=\"userkits\">\n                <h1>{props.location.state.name}'s kits</h1>\n                <hr/>\n                <p className=\"center\">this user has not submitted any kits ):</p></div>)\n    }\n    else {\n    return (\n        <div className=\"userkits\">\n        <h1>{props.location.state.name}'s kits</h1>\n        <hr/>\n            <CardColumns>\n               { props.kit && props.kit.map(kit => {\n                console.log(kit.id)\n                var alike\n                if(props.likes) {\n                    console.log(props.likes)\n                for (var i in props.likes) {\n                    console.log(props.likes[i].id)\n                    if (props.likes[i].id === kit.id) {\n                        console.log(props.likes[i].id)\n                        alike = props.likes[i]}\n                }}\n                if (kit.userId === props.location.state.id) {\n                    return (\n                        <KitCard kit={kit} like={alike}  key={props.kit.id} />\n                    )}\n                })} \n            </CardColumns>\n            </div>\n    \n    )}\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        // get kit object from rootReducer, to kits array\n        kit: state.firestore.ordered.kit,\n        likes: state.firestore.ordered.likes,\n        auth: state.firebase.auth\n    }\n}\n\nexport default  compose(\n    connect(mapStateToProps),\n    firestoreConnect(props => {\n        if (props.auth.uid) {\n        return [ \n        {collection: 'kit'},\n        {collection: 'users'},\n        {collection: 'users',\n        doc: props.auth.uid,\n        subcollections: [\n            {collection: 'likes'}\n        ], storeAs: 'likes'}\n    ]}\n    else {\n        return[{collection: 'kit'},\n        {collection: 'users'}]\n    }})\n)(UserKits);\n\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux'\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns';\nimport UserKits from './UserKits';\n\nconst AllUsers = ({kit, users}) => {\n    console.log(users);\n    console.log(kit);\n    return (\n        <div className = \"authPages\">\n            <h1> All our Contributers. </h1>\n            <p className=\"center\">here are all of our users who have contributed suggestions for things for you to do during quarantine!</p>\n            <hr/>\n            <CardColumns>\n            { users && users.map(user => {\n                    var count = 0;\n                    // map thru kits on each user & count how many \n                    { kit && kit.map(akit => {\n                        if(akit.userId === user.id) {\n                            count++;\n                        }\n                    })}\n                    return (\n                        <Card>\n                            <Card.Body>\n                            <Card.Title><Link to={\n                                {\n                                    pathname: '/userkits',\n                                    state: {\n                                        id: user.id,\n                                        count: count,\n                                        name: user.username\n                                    }\n                                }\n                            }>{user.username}</Link></Card.Title>\n                            <Card.Text>\n                                <span className=\"identifier\">name: &nbsp;<p className=\"kitName\">{user.fName} {user.lName}</p></span>\n                                <span className=\"identifier\">major: &nbsp;<p className=\"kitName\">{user.major}</p></span>\n                                <span className=\"identifier\">classification: &nbsp;<p className=\"kitName\">{user.classification}</p></span>\n                                <span className=\"identifier\">state: &nbsp;<p className=\"kitName\">{user.state}</p></span>\n                                <span className=\"identifier\">email: &nbsp;<p className=\"kitName\">{user.email}</p></span>\n                                <span className=\"identifier\">kits: &nbsp;<p className=\"kitName\"> {count}</p></span>\n                            </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    )\n                })}\n            </CardColumns>\n            \n\n            \n        </div>\n    )\n}\n\n// map state from store to props, takes in state of store\n// queries will grab data from the store & then pass it to all its children components\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        // get kit object from rootReducer, to kits array\n        kit: state.firestore.ordered.kit,\n        users: state.firestore.ordered.users\n\n    }\n}\n\nexport default  compose(\n    firestoreConnect(() => ['kit', 'users']),\n    connect(mapStateToProps)\n)(AllUsers);\n\n","import React from 'react';\nimport './_main.scss';\nimport Navigation from './components/layout/Navigation.js';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Queries from './components/dashboard/Queries';\nimport KitInfo from './components/kits/KitInfo';\nimport SignInPage from './components/auth/SignInPage';\nimport SignUpPage from './components/auth/SignUpPage';\nimport AddKit from './components/kits/AddKit';\nimport UserProfile from './components/users/UserProfile';\nimport AllUsers from './components/users/AllUsers';\nimport UserKits from './components/users/UserKits';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Switch>\n        <Route exact path='/' component={Queries} />\n        <Route path='/signin' component={SignInPage} />\n        <Route path='/signup' component={SignUpPage} />\n        <Route path='/addkit' component={AddKit} />\n        <Route path='/profile' component={UserProfile} />\n        <Route path='/users' component={AllUsers} />\n        <Route path='/userkits' component={UserKits} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'SIGNIN_SUCCESS':\n            console.log('signin successful!')\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNIN_ERROR':\n            console.log('signin error!')\n            return {\n                ...state,\n                authError: 'Signin failed'\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success!')\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success!')\n            return { \n                ...state, \n                authError: null }\n        case 'SIGNUP_ERROR':\n            console.log('signup error!')\n            return { \n                ...state, \n                authError: action.err.message }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer;","const initState = {\n    kits: [\n        {id: '1', name: 'ramen & eggs', type: 'food', description: 'quick, easy, cheap, & delicious!'},\n        {id: '2', name: 'animal crossing', type: 'games', description: 'super cute game for quarantine!!!'},\n        {id: '3', name: 'tiger king', type: 'tv', description: 'not my fav show'}\n    ]\n}\n\nconst kitReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'ADD_KIT':\n            console.log(\"added project\", action.kit);\n            return state;\n        case 'ADD_KIT_ERROR':\n            console.log(\"add kit error\", action.err);\n            return state;\n        case 'UPDATE_LIKE':\n            console.log(\"updated like!!\", action.kit);\n            return state;\n        case 'UPDATE_LIKE_ERROR':\n            console.log(\"update like error\", action.err);\n            return state;\n        case 'LIKE_KIT_SUCCESS':\n            console.log(\"like kit success!!\", action.kit);\n            return state;\n        case 'LIKE_KIT_ERROR':\n            console.log(\"like kit error\", action.err);\n            return state;\n        case 'DELETE_KIT_SUCCESS':\n            console.log(\"delete kit success!!\", action.kit);\n            return state;\n        case 'DELETE_KIT_ERROR':\n            console.log(\"delete kit error\", action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default kitReducer;","import authReducer from './authReducer';\nimport kitReducer from './kitReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    kit: kitReducer,\n    firestore: firestoreReducer,    // for db connection\n    firebase: firebaseReducer       // for authentication\n    // contains firestore data, automatically syncs/retrieves relevant data!\n\n})\n\nexport default rootReducer;","import firebase from 'firebase/app'\n// import db\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCTKWiAIBp-BbbK70bxNK012oRUIQv4Buk\",\n    authDomain: \"quarantine-corner.firebaseapp.com\",\n    databaseURL: \"https://quarantine-corner.firebaseio.com\",\n    projectId: \"quarantine-corner\",\n    storageBucket: \"quarantine-corner.appspot.com\",\n    messagingSenderId: \"148806827821\",\n    appId: \"1:148806827821:web:7578252f203a00da619da4\",\n    measurementId: \"G-ZTYF8SFKT9\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n  firebase.firestore();\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './_main.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider, useSelector } from 'react-redux';\nimport rootReducer from './reduxStore/reducer/rootReducer'\nimport thunk from 'redux-thunk';\nimport firebase from 'firebase/app'\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport Spinner from 'react-bootstrap/Spinner'\n\n\n\n\n// creates central redux data store\n// pass master reducer to store so they can make changes to it\n// pass middleware/thunk to handle asynch requests to database\n// pass in extra arguments of firebase & firestore so action creator can interact w db\n// const store = createStore(rootReducer, \n//   compose(\n//     applyMiddleware(thunk.withExtraArgument(getFirebase, getFirebase))),\n//     reduxFirestore(firebaseConfig),\n//     reactReduxFirebase(firebaseConfig)\n//   );\n\n// create a data store & pass in a reducer to manipulate states\n// apply middleware to access database asynchronously to enhance store with extra functionality\n// pass in extra arguments for firebase/store into courseAction, for example\nconst store = createStore(rootReducer, \n  compose(applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n  // store enhancers to connect to database\n  reduxFirestore(fbConfig),\n  )\n);\n\n// react-redux-firebase config\n// can access state.firebase.profile to get logged in user profile!!\nconst rrfConfig = {\n  useFirestoreForProfile: true, // Firestore for Profile instead of Realtime DB\n  userProfile: 'users'\n}\n\n// tbh idk wtf is happening here but i got it off the documentation, bo o m\nconst rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance // <- needed if using firestore\n}\n\n// to make sure authenticate before rendering to dom\nfunction AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n      if (!isLoaded(auth)) return <div>\n            <Spinner animation=\"grow\" variant=\"primary\" />\n            <Spinner animation=\"grow\" variant=\"secondary\" />\n            <Spinner animation=\"grow\" variant=\"success\" />\n            <Spinner animation=\"grow\" variant=\"danger\" />\n            <Spinner animation=\"grow\" variant=\"warning\" />\n            <Spinner animation=\"grow\" variant=\"info\" />\n            <Spinner animation=\"grow\" variant=\"dark\" />\n              </div>;\n              return children\n}\n\n// provider passes store into app so it has access to store (binding layer)\n\nReactDOM.render(\n  <Provider store = {store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n            <AuthIsLoaded>\n                <App />\n            </AuthIsLoaded>\n        </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}